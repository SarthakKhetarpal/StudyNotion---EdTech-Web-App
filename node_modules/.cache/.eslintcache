[{"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/index.js":"1","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/App.js":"2","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/pages/Home.jsx":"3","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/HomePage/HighlightText.jsx":"4","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/HomePage/Button.jsx":"5","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/HomePage/CodeBlocks.jsx":"6","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/HomePage/TimeLineSection.jsx":"7","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/HomePage/LearningLanguageSection.jsx":"8","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/HomePage/InstructorSection.jsx":"9","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/common/Footer.jsx":"10","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/data/footer-links.js":"11","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/HomePage/ExploreMore.jsx":"12","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/data/homepage-explore.js":"13","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/HomePage/CourseCard.jsx":"14","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/common/Navbar.jsx":"15","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/data/navbar-links.js":"16","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/reducer/index.js":"17","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/slices/authSlice.js":"18","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/slices/cartSlice.js":"19","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/slices/profileSlice.js":"20","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/services/apiconnector.js":"21","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/services/apis.js":"22","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Auth/OpenRoute.jsx":"23","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/pages/Login.jsx":"24","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/pages/Signup.jsx":"25","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Auth/Template.jsx":"26","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Auth/LoginForm.jsx":"27","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Auth/SignupForm.jsx":"28","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/utils/constants.js":"29","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/services/operations/authAPI.js":"30","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/common/Tab.jsx":"31","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/pages/ForgotPassword.jsx":"32","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/pages/UpdatePassword.jsx":"33","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/pages/VerifyEmail.jsx":"34","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/pages/About.jsx":"35","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/AboutPage/Quote.jsx":"36","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/AboutPage/StatsComponent.jsx":"37","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/AboutPage/LearningGrid.jsx":"38","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/AboutPage/ContactFormSection.jsx":"39","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Auth/ProfileDropDown.jsx":"40","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/hooks/useOnClickOutside.js":"41","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Dashboard/MyProfile.jsx":"42","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/common/IconBtn.jsx":"43","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/pages/Dashboard.jsx":"44","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Dashboard/Sidebar.jsx":"45","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/data/dashboard-links.js":"46","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Dashboard/SidebarLink.jsx":"47","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/common/ConfirmationModal.jsx":"48","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Auth/PrivateRoute.jsx":"49","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/pages/Error.jsx":"50","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/pages/Contact.jsx":"51","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/ContactPage/ContactDetails.jsx":"52","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/ContactPage/ContactForm.jsx":"53","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/ContactPage/ContactUsForm.jsx":"54","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Dashboard/EnrolledCourses.jsx":"55","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/services/operations/profileAPI.js":"56","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Dashboard/Cart/index.jsx":"57","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Dashboard/Settings/index.jsx":"58","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Dashboard/Settings/EditProfile.jsx":"59","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Dashboard/Settings/ChangeProfilePicture.jsx":"60","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Dashboard/Settings/DeleteAccount.jsx":"61","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Dashboard/Settings/UpdatePassword.jsx":"62","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/services/operations/SettingsAPI.js":"63","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Dashboard/Cart/RenderCartCourses.jsx":"64","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Dashboard/Cart/RenderTotalAmount.jsx":"65","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/slices/courseSlice.js":"66","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/utils/dateFormatter.js":"67","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/services/operations/courseDetailsAPI.js":"68","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/slices/viewCourseSlice.js":"69","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/pages/Catalog.jsx":"70","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Dashboard/EditCourse/index.js":"71","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Dashboard/AddCourse/index.jsx":"72","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/services/operations/pageAndComponentData.js":"73","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Catalog/CourseSlider.jsx":"74","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Catalog/Course_Card.jsx":"75","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Dashboard/AddCourse/RenderSteps.jsx":"76","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/utils/avgRating.js":"77","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/common/RatingStars.jsx":"78","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Dashboard/AddCourse/CourseBuilder/CourseBuilderForm.jsx":"79","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Dashboard/AddCourse/CourseInformation/CourseInformationForm.jsx":"80","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Dashboard/AddCourse/CourseInformation/RequirementField.jsx":"81","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Dashboard/MyCourses.jsx":"82","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Dashboard/InstructorCourses/CoursesTable.jsx":"83","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/services/formatDate.js":"84","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Dashboard/AddCourse/CourseInformation/ChipInput.jsx":"85","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Dashboard/AddCourse/Upload.jsx":"86","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Dashboard/AddCourse/PublishCourse/index.jsx":"87","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Dashboard/AddCourse/CourseBuilder/NestedView.jsx":"88","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Dashboard/AddCourse/CourseBuilder/SubSectionModal.jsx":"89","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/pages/CourseDetails.jsx":"90","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/services/operations/studentFeaturesAPI.js":"91"},{"size":651,"mtime":1716518923264,"results":"92","hashOfConfig":"93"},{"size":3773,"mtime":1719367655374,"results":"94","hashOfConfig":"93"},{"size":8530,"mtime":1716431273380,"results":"95","hashOfConfig":"93"},{"size":188,"mtime":1716211356694,"results":"96","hashOfConfig":"93"},{"size":404,"mtime":1716210831301,"results":"97","hashOfConfig":"93"},{"size":2242,"mtime":1716203582949,"results":"98","hashOfConfig":"93"},{"size":3531,"mtime":1716258915563,"results":"99","hashOfConfig":"93"},{"size":1551,"mtime":1716262628086,"results":"100","hashOfConfig":"93"},{"size":1505,"mtime":1716262521943,"results":"101","hashOfConfig":"93"},{"size":6723,"mtime":1716737265909,"results":"102","hashOfConfig":"93"},{"size":2138,"mtime":1684788174000,"results":"103","hashOfConfig":"93"},{"size":2592,"mtime":1716736779876,"results":"104","hashOfConfig":"93"},{"size":4743,"mtime":1716736778581,"results":"105","hashOfConfig":"93"},{"size":1511,"mtime":1716736034263,"results":"106","hashOfConfig":"93"},{"size":6123,"mtime":1687098170000,"results":"107","hashOfConfig":"93"},{"size":231,"mtime":1717989321414,"results":"108","hashOfConfig":"93"},{"size":423,"mtime":1718246794803,"results":"109","hashOfConfig":"93"},{"size":642,"mtime":1716778641340,"results":"110","hashOfConfig":"93"},{"size":2363,"mtime":1716778666342,"results":"111","hashOfConfig":"93"},{"size":569,"mtime":1717930843079,"results":"112","hashOfConfig":"93"},{"size":359,"mtime":1685293453000,"results":"113","hashOfConfig":"93"},{"size":2599,"mtime":1685450432000,"results":"114","hashOfConfig":"93"},{"size":382,"mtime":1685450320000,"results":"115","hashOfConfig":"93"},{"size":386,"mtime":1717989163092,"results":"116","hashOfConfig":"93"},{"size":440,"mtime":1685449798000,"results":"117","hashOfConfig":"93"},{"size":1783,"mtime":1685449842000,"results":"118","hashOfConfig":"93"},{"size":2847,"mtime":1716778576467,"results":"119","hashOfConfig":"93"},{"size":6778,"mtime":1716778762074,"results":"120","hashOfConfig":"93"},{"size":177,"mtime":1686231778000,"results":"121","hashOfConfig":"93"},{"size":4742,"mtime":1686072137000,"results":"122","hashOfConfig":"93"},{"size":722,"mtime":1685450130000,"results":"123","hashOfConfig":"93"},{"size":2990,"mtime":1717035822950,"results":"124","hashOfConfig":"93"},{"size":4177,"mtime":1717123433511,"results":"125","hashOfConfig":"93"},{"size":2264,"mtime":1717126756913,"results":"126","hashOfConfig":"93"},{"size":6310,"mtime":1718158727461,"results":"127","hashOfConfig":"93"},{"size":589,"mtime":1717383618660,"results":"128","hashOfConfig":"93"},{"size":875,"mtime":1718158685408,"results":"129","hashOfConfig":"93"},{"size":3445,"mtime":1717468528570,"results":"130","hashOfConfig":"93"},{"size":507,"mtime":1717988347085,"results":"131","hashOfConfig":"93"},{"size":2137,"mtime":1717640708004,"results":"132","hashOfConfig":"93"},{"size":1124,"mtime":1685450889000,"results":"133","hashOfConfig":"93"},{"size":4390,"mtime":1718158790473,"results":"134","hashOfConfig":"93"},{"size":718,"mtime":1718609911497,"results":"135","hashOfConfig":"93"},{"size":820,"mtime":1718158432532,"results":"136","hashOfConfig":"93"},{"size":2543,"mtime":1718158457552,"results":"137","hashOfConfig":"93"},{"size":935,"mtime":1684788174000,"results":"138","hashOfConfig":"93"},{"size":1148,"mtime":1718158475202,"results":"139","hashOfConfig":"93"},{"size":1056,"mtime":1718610158821,"results":"140","hashOfConfig":"93"},{"size":315,"mtime":1717932279496,"results":"141","hashOfConfig":"93"},{"size":193,"mtime":1717932946593,"results":"142","hashOfConfig":"93"},{"size":1024,"mtime":1685643920000,"results":"143","hashOfConfig":"93"},{"size":1492,"mtime":1685643775000,"results":"144","hashOfConfig":"93"},{"size":596,"mtime":1685643785000,"results":"145","hashOfConfig":"93"},{"size":5438,"mtime":1718599545031,"results":"146","hashOfConfig":"93"},{"size":2664,"mtime":1718158877949,"results":"147","hashOfConfig":"93"},{"size":2149,"mtime":1686999298000,"results":"148","hashOfConfig":"93"},{"size":627,"mtime":1718158327626,"results":"149","hashOfConfig":"93"},{"size":570,"mtime":1718157847218,"results":"150","hashOfConfig":"93"},{"size":7040,"mtime":1718157847218,"results":"151","hashOfConfig":"93"},{"size":3022,"mtime":1718157847217,"results":"152","hashOfConfig":"93"},{"size":1612,"mtime":1718157847218,"results":"153","hashOfConfig":"93"},{"size":4029,"mtime":1718157847218,"results":"154","hashOfConfig":"93"},{"size":3559,"mtime":1686231255000,"results":"155","hashOfConfig":"93"},{"size":1754,"mtime":1718157878370,"results":"156","hashOfConfig":"93"},{"size":710,"mtime":1718158224772,"results":"157","hashOfConfig":"93"},{"size":850,"mtime":1718158510540,"results":"158","hashOfConfig":"93"},{"size":173,"mtime":1686231043000,"results":"159","hashOfConfig":"93"},{"size":11613,"mtime":1718939923144,"results":"160","hashOfConfig":"93"},{"size":1011,"mtime":1718763006800,"results":"161","hashOfConfig":"93"},{"size":3245,"mtime":1687109106000,"results":"162","hashOfConfig":"93"},{"size":1565,"mtime":1687098552000,"results":"163","hashOfConfig":"93"},{"size":1514,"mtime":1686834191000,"results":"164","hashOfConfig":"93"},{"size":743,"mtime":1687103532000,"results":"165","hashOfConfig":"93"},{"size":1411,"mtime":1718936661348,"results":"166","hashOfConfig":"93"},{"size":1401,"mtime":1687106222000,"results":"167","hashOfConfig":"93"},{"size":2583,"mtime":1687018600000,"results":"168","hashOfConfig":"93"},{"size":392,"mtime":1687097283000,"results":"169","hashOfConfig":"93"},{"size":1061,"mtime":1687097345000,"results":"170","hashOfConfig":"93"},{"size":4598,"mtime":1687098428000,"results":"171","hashOfConfig":"93"},{"size":11080,"mtime":1686843956000,"results":"172","hashOfConfig":"93"},{"size":2488,"mtime":1686658870000,"results":"173","hashOfConfig":"93"},{"size":1229,"mtime":1687098548000,"results":"174","hashOfConfig":"93"},{"size":6610,"mtime":1687098573000,"results":"175","hashOfConfig":"93"},{"size":498,"mtime":1687098603000,"results":"176","hashOfConfig":"93"},{"size":3422,"mtime":1686658899000,"results":"177","hashOfConfig":"93"},{"size":3819,"mtime":1718937100999,"results":"178","hashOfConfig":"93"},{"size":3246,"mtime":1687098709000,"results":"179","hashOfConfig":"93"},{"size":6892,"mtime":1687098458000,"results":"180","hashOfConfig":"93"},{"size":6953,"mtime":1687098478000,"results":"181","hashOfConfig":"93"},{"size":858,"mtime":1687454526000,"results":"182","hashOfConfig":"93"},{"size":4062,"mtime":1719367713292,"results":"183","hashOfConfig":"93"},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},"kbhwa7",{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191"},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"187"},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"187"},{"filePath":"212","messages":"213","suppressedMessages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"187"},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"228","messages":"229","suppressedMessages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"231","messages":"232","suppressedMessages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"234","messages":"235","suppressedMessages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"237","messages":"238","suppressedMessages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"240","messages":"241","suppressedMessages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"243","messages":"244","suppressedMessages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"246","messages":"247","suppressedMessages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"249","messages":"250","suppressedMessages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"253","messages":"254","suppressedMessages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"256","messages":"257","suppressedMessages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"259","messages":"260","suppressedMessages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"262","messages":"263","suppressedMessages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"265","messages":"266","suppressedMessages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"187"},{"filePath":"269","messages":"270","suppressedMessages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"272","messages":"273","suppressedMessages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"275","messages":"276","suppressedMessages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"278","messages":"279","suppressedMessages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"281","messages":"282","suppressedMessages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"284","messages":"285","suppressedMessages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"187"},{"filePath":"288","messages":"289","suppressedMessages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"291","messages":"292","suppressedMessages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"187"},{"filePath":"295","messages":"296","suppressedMessages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"298","messages":"299","suppressedMessages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"301","messages":"302","suppressedMessages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"304","messages":"305","suppressedMessages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"307","messages":"308","suppressedMessages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"310","messages":"311","suppressedMessages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"313","messages":"314","suppressedMessages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"316","messages":"317","suppressedMessages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"319","messages":"320","suppressedMessages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"322","messages":"323","suppressedMessages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"325","messages":"326","suppressedMessages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"328","messages":"329","suppressedMessages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"331","messages":"332","suppressedMessages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"334","messages":"335","suppressedMessages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"337","messages":"338","suppressedMessages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"340","messages":"341","suppressedMessages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"343","messages":"344","suppressedMessages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"346","messages":"347","suppressedMessages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"349","messages":"350","suppressedMessages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"352","messages":"353","suppressedMessages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"187"},{"filePath":"356","messages":"357","suppressedMessages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"187"},{"filePath":"360","messages":"361","suppressedMessages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"363","messages":"364","suppressedMessages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"366","messages":"367","suppressedMessages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"369","messages":"370","suppressedMessages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"372","messages":"373","suppressedMessages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"375","messages":"376","suppressedMessages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"378","messages":"379","suppressedMessages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"381","messages":"382","suppressedMessages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"384","messages":"385","suppressedMessages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"187"},{"filePath":"388","messages":"389","suppressedMessages":"390","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"391","messages":"392","suppressedMessages":"393","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"394","messages":"395","suppressedMessages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"397","messages":"398","suppressedMessages":"399","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"400"},{"filePath":"401","messages":"402","suppressedMessages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"404","messages":"405","suppressedMessages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407","usedDeprecatedRules":"187"},{"filePath":"408","messages":"409","suppressedMessages":"410","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"187"},{"filePath":"412","messages":"413","suppressedMessages":"414","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"415","messages":"416","suppressedMessages":"417","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"418","usedDeprecatedRules":"252"},{"filePath":"419","messages":"420","suppressedMessages":"421","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"422","usedDeprecatedRules":"187"},{"filePath":"423","messages":"424","suppressedMessages":"425","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"426","messages":"427","suppressedMessages":"428","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"429","messages":"430","suppressedMessages":"431","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"432","messages":"433","suppressedMessages":"434","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"435","messages":"436","suppressedMessages":"437","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"438","messages":"439","suppressedMessages":"440","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"441","messages":"442","suppressedMessages":"443","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"444","messages":"445","suppressedMessages":"446","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"447","messages":"448","suppressedMessages":"449","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"450","usedDeprecatedRules":"187"},{"filePath":"451","messages":"452","suppressedMessages":"453","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"252"},{"filePath":"454","messages":"455","suppressedMessages":"456","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"457","messages":"458","suppressedMessages":"459","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"460"},{"filePath":"461","messages":"462","suppressedMessages":"463","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"464","usedDeprecatedRules":"187"},{"filePath":"465","messages":"466","suppressedMessages":"467","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"468","messages":"469","suppressedMessages":"470","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"471","usedDeprecatedRules":"187"},{"filePath":"472","messages":"473","suppressedMessages":"474","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"475","messages":"476","suppressedMessages":"477","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/index.js",[],[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/App.js",["478","479"],[],"import \"./App.css\";\nimport {Route, Routes, useNavigate } from \"react-router-dom\";\nimport Home from \"./pages/Home\"\nimport Navbar from \"./components/common/Navbar\"\nimport OpenRoute from \"./components/core/Auth/OpenRoute\"\n\nimport Login from \"./pages/Login\"\nimport Signup from \"./pages/Signup\"\nimport {ForgotPassword} from \"./pages/ForgotPassword\";\nimport {UpdatePassword} from \"./pages/UpdatePassword\";\nimport {VerifyEmail} from \"./pages/VerifyEmail\";\nimport {About} from \"./pages/About\";\nimport Contact from \"./pages/Contact\";\nimport MyProfile from \"./components/core/Dashboard/MyProfile\";\nimport Dashboard from \"./pages/Dashboard\";\nimport {PrivateRoute} from \"./components/core/Auth/PrivateRoute\";\nimport {Error} from \"./pages/Error\"\nimport Settings from \"./components/core/Dashboard/Settings\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {EnrolledCourses} from \"./components/core/Dashboard/EnrolledCourses\";\nimport {Cart} from \"./components/core/Dashboard/Cart\";\nimport { ACCOUNT_TYPE } from \"./utils/constants\";\nimport AddCourse from \"./components/core/Dashboard/AddCourse\";\nimport MyCourses from \"./components/core/Dashboard/MyCourses\";\nimport EditCourse from \"./components/core/Dashboard/EditCourse\";\nimport Catalog from \"./pages/Catalog\";\nimport CourseDetails from \"./pages/CourseDetails\";\n\nfunction App() {\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  \n  const { user } = useSelector((state) => state.profile)\n\n\n  return (\n    <div className=\"w-screen min-h-screen bg-richblack-900 flex flex-col font-inter\">\n    <Navbar/>\n    <Routes>\n      <Route path=\"/\" element={<Home/>} />\n      <Route path=\"catalog/:catalogName\" element={<Catalog/>} />\n      <Route path=\"courses/:courseId\" element={<CourseDetails/>} />\n      \n      <Route\n          path=\"signup\"\n          element={\n            <OpenRoute>\n              <Signup />\n            </OpenRoute>\n          }\n        />\n    <Route\n          path=\"login\"\n          element={\n            <OpenRoute>\n              <Login />\n            </OpenRoute>\n          }\n        />\n\n    <Route\n          path=\"forgot-password\"\n          element={\n            <OpenRoute>\n              <ForgotPassword />\n            </OpenRoute>\n          }\n        />  \n\n      <Route\n          path=\"verify-email\"\n          element={\n            <OpenRoute>\n              <VerifyEmail />\n            </OpenRoute>\n          }\n        />  \n\n    <Route\n          path=\"update-password/:id\"\n          element={\n            <OpenRoute>\n              <UpdatePassword />\n            </OpenRoute>\n          }\n        />  \n\n    <Route\n          path=\"about\"\n          element={\n            <OpenRoute>\n              <About />\n            </OpenRoute>\n          }\n        />\n    <Route path=\"/contact\" element={<Contact />} />\n\n    <Route \n      element={\n        <PrivateRoute>\n          <Dashboard />\n        </PrivateRoute>\n      }\n    >\n      <Route path=\"dashboard/my-profile\" element={<MyProfile />} />\n      <Route path=\"dashboard/Settings\" element={<Settings />} />\n      \n\n      {\n        user?.accountType === ACCOUNT_TYPE.STUDENT && (\n          <>\n          <Route path=\"dashboard/cart\" element={<Cart />} />\n          <Route path=\"dashboard/enrolled-courses\" element={<EnrolledCourses />} />\n          </>\n        )\n      }\n\n      {\n        user?.accountType === ACCOUNT_TYPE.INSTRUCTOR && (\n          <>\n          <Route path=\"dashboard/add-course\" element={<AddCourse />} />\n          <Route path=\"dashboard/my-courses\" element={<MyCourses />} />\n          <Route path=\"dashboard/edit-course/:courseId\" element={<EditCourse />} />\n          \n          </>\n        )\n      }\n\n\n    </Route>\n\n    \n\n    <Route path=\"*\" element={<Error />} />\n\n\n    </Routes>\n\n   </div>\n  );\n}\n\nexport default App;\n","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/pages/Home.jsx",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/HomePage/HighlightText.jsx",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/HomePage/Button.jsx",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/HomePage/CodeBlocks.jsx",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/HomePage/TimeLineSection.jsx",["480","481","482"],[],"import React from 'react';\nimport Logo1 from \"../../../assets/TimeLineLogo/Logo1.svg\";\nimport Logo2 from \"../../../assets/TimeLineLogo/Logo2.svg\";\nimport Logo3 from \"../../../assets/TimeLineLogo/Logo3.svg\";\nimport Logo4 from \"../../../assets/TimeLineLogo/Logo4.svg\";\nimport timelineImage from \"../../../assets/Images/TimelineImage.png\";\n\nconst timeline = [\n    {\n        Logo: Logo1,\n        Heading: \"Leadership\",\n        Description: \"Fully committed to the company's success\"\n    },\n    {\n        Logo: Logo2,\n        Heading: \"Responsibility\",\n        Description: \"Students will always be our top priority\"\n    },\n    {\n        Logo: Logo3,\n        Heading: \"Flexibility\",\n        Description: \"The ability to switch is an important skill\"\n    },\n    {\n        Logo: Logo4,\n        Heading: \"Solve the problem\",\n        Description: \"Code your way to a solution\"\n    }\n]\n\nexport const TimeLineSection = () => {\n  return (\n    <div>\n\n        <div className='flex flex-row items-center justify-between gap-15'>\n\n            <div className='flex flex-col w-[45%] gap-5'>\n                {\n                    timeline.map( (element, index) => {\n                        return (\n                            <div>\n                                <div className='flex flex-row gap-6' key={index}>\n\n                                    <div className='w-[50px] h-[50px] rounded-full bg-white flex items-center justify-center'>\n                                        <img src={element.Logo}/>\n                                    </div>\n\n                                    <div className='flex flex-col items-start'>\n\n                                        <h2 className='font-semibold text-[18px]'>\n                                            {element.Heading}\n                                        </h2>\n                                        <p className='text-base'>\n                                            {element.Description}\n                                        </p>\n\n                                    </div>\n\n                                </div>\n\n                                {\n                                    element.Heading == \"Solve the problem\" ? \n                                    (<div></div>) : \n                                    (<div className='border border-dashed border-1px w-[1px] h-[40px] ml-[25px] mt-[15px] border-richblack-200'></div>)\n                                }\n                            </div>\n                        );\n                    })\n                }\n            </div>\n\n            <div className='relative shadow-blue-200'>\n\n                <img src={timelineImage} alt='timeline image' className='shadow-white object-fit h-fit'/>\n\n                <div className='absolute bg-caribbeangreen-700 flex flex-row text-white uppercase py-8\n                left-[50%] translate-x-[-50%] translate-y-[-50%]'>\n\n                    <div className='flex flex-row gap-5 items-center border-r border-caribbeangreen-300 px-7'>\n                        <p className='text-3xl font-bold'>10</p>\n                        <p className='text-sm text-caribbeangreen-300'>Years Experience</p>\n                    </div>\n                    \n                    <div className='flex flex-row gap-5 items-center px-7'>\n                        <p className='text-3xl font-bold'>250</p>\n                        <p className='text-sm text-caribbeangreen-300'>Types of Courses</p>\n                    </div>\n\n                </div>\n\n            </div>\n\n        </div>\n\n    </div>\n  )\n}\n","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/HomePage/LearningLanguageSection.jsx",["483","484","485"],[],"import React from 'react'\nimport { HighlightText } from './HighlightText'\nimport know_your_progress from '../../../assets/Images/Know_your_progress.png';\nimport compare_with_others from '../../../assets/Images/Compare_with_others.png';\nimport plan_your_lessons from '../../../assets/Images/Plan_your_lessons.png';\nimport { CTAButton } from './Button';\n\nexport const LearningLanguageSection = () => {\n  return (\n    <div className='flex flex-col gap-5 mt-[130px] mb-16 items-center'>\n\n      <div className='text-4xl text-center font-semibold'>\n        Your swiss knife for\n        <HighlightText text={\"learning any language\"}/>\n      </div>\n\n      <div className='text-center text-richblack-600 mx-auto text-base font-medium w-[70%]'>\n        Using spin making learning multiple languages easy. with 20+ languages realistic voice-over, progress tracking, custom schedule and more.\n      </div>\n\n      <div className='flex flex-row items-center justify-center mt-5'>\n        \n\n        <img src={know_your_progress}\n         alt='know your progress image'\n          className='object-contain translate-x-[30%] z-0'/>\n\n        <img src={compare_with_others}\n         alt='compare with others image' \n         className='object-contain z-10'/>\n\n        <img src={plan_your_lessons} \n         alt='plan your lessons image' \n         className='object-contain translate-x-[-30%] z-20'/>\n\n      </div>\n\n      <div className='mt-5'>\n        <CTAButton linkTo={\"/signup\"} active={true}>\n          Learn More\n        </CTAButton>\n      </div>\n\n    </div>\n  )\n}\n","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/HomePage/InstructorSection.jsx",["486"],[],"import React from 'react';\nimport instructoreImage from '../../../assets/Images/Instructor.png'\nimport { HighlightText } from './HighlightText';\nimport { CTAButton } from './Button';\nimport { FaArrowRight } from \"react-icons/fa\";\n\nexport const InstructorSection = () => {\n  return (\n    <div>\n\n        <div className='flex flex-row gap-20 items-center mt-[100px]'>\n\n            <div className='shadow-[-15px_-15px_0px_0px_#F5F5F5] w-[57%]'>\n                <img src={instructoreImage}/>\n            </div>\n\n            <div className='flex flex-col w-[43%]'>\n\n                <p className='text-4xl font-semibold'>\n                    Become an\n                </p>\n                <div className='text-4xl font-semibold'>\n                    <HighlightText text={\"Instructor\"}/>\n                </div>\n\n                <div className='font-medium text-richblack-300 text-md pt-6 pb-16'>\n                    Instructors from around the world teach millions of students on StudyNotion. We provide the tools and skills to teach what you love.\n                </div>\n\n                <div className='flex items-start'>\n                    <CTAButton active={true} linkTo={\"/signup\"}>\n                        <div className='flex flex-row items-center justify-center gap-2'>\n                            Start Teaching Today\n                            <FaArrowRight/>\n                        </div>\n                    </CTAButton>\n                </div>\n\n            </div>\n\n        </div>\n\n    </div>\n  )\n}\n","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/common/Footer.jsx",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/data/footer-links.js",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/HomePage/ExploreMore.jsx",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/data/homepage-explore.js",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/HomePage/CourseCard.jsx",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/common/Navbar.jsx",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/data/navbar-links.js",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/reducer/index.js",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/slices/authSlice.js",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/slices/cartSlice.js",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/slices/profileSlice.js",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/services/apiconnector.js",[],[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/services/apis.js",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Auth/OpenRoute.jsx",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/pages/Login.jsx",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/pages/Signup.jsx",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Auth/Template.jsx",["487"],[],"import { FcGoogle } from \"react-icons/fc\"\nimport { useSelector } from \"react-redux\"\n\nimport frameImg from \"../../../assets/Images/frame.png\"\nimport LoginForm from \"./LoginForm\"\nimport SignupForm from \"./SignupForm\"\n\nfunction Template({ title, description1, description2, image, formType }) {\n  const { loading } = useSelector((state) => state.auth)\n\n  return (\n    <div className=\"grid min-h-[calc(100vh-3.5rem)] place-items-center\">\n      {loading ? (\n        <div className=\"spinner\"></div>\n      ) : (\n        <div className=\"mx-auto flex w-11/12 max-w-maxContent flex-col-reverse justify-between gap-y-12 py-12 md:flex-row md:gap-y-0 md:gap-x-12\">\n          <div className=\"mx-auto w-11/12 max-w-[450px] md:mx-0\">\n            <h1 className=\"text-[1.875rem] font-semibold leading-[2.375rem] text-richblack-5\">\n              {title}\n            </h1>\n            <p className=\"mt-4 text-[1.125rem] leading-[1.625rem]\">\n              <span className=\"text-richblack-100\">{description1}</span>{\" \"}\n              <span className=\"font-edu-sa font-bold italic text-blue-100\">\n                {description2}\n              </span>\n            </p>\n            {formType === \"signup\" ? <SignupForm /> : <LoginForm />}\n          </div>\n          <div className=\"relative mx-auto w-11/12 max-w-[450px] md:mx-0\">\n            <img\n              src={frameImg}\n              alt=\"Pattern\"\n              width={558}\n              height={504}\n              loading=\"lazy\"\n            />\n            <img\n              src={image}\n              alt=\"Students\"\n              width={558}\n              height={504}\n              loading=\"lazy\"\n              className=\"absolute -top-4 right-4 z-10\"\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Template","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Auth/LoginForm.jsx",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Auth/SignupForm.jsx",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/utils/constants.js",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/services/operations/authAPI.js",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/common/Tab.jsx",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/pages/ForgotPassword.jsx",["488"],[],"import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { BiArrowBack } from \"react-icons/bi\";\nimport { Link } from 'react-router-dom';\nimport { getPasswordResetToken } from '../services/operations/authAPI';\nimport toast from 'react-hot-toast';\n\nexport const ForgotPassword = () => {\n\n    const [emailSent, setEmailSent] = useState(false);\n    const [email, setEmail] = useState(\"\");\n\n    const {loading} = useSelector( (state) => state.auth);\n\n    const dispatch = useDispatch();\n\n    const handleOnSubmit = (e) => {\n        // toast.success(\"Button clicked\");\n        e.preventDefault();\n        dispatch(getPasswordResetToken(email, setEmailSent));\n    }\n\n  return (\n    <div className='flex items-center justify center mx-auto text-white'>\n        {\n            loading ? (\n                <div>Loading...</div>\n            ) : (\n                <div>\n                    <h1>\n                        {\n                            emailSent ? (\"Check Email\") : (\"Reset your password\")\n                        }\n                    </h1>\n\n                    <p>\n                        {\n                            emailSent ? (\n                                `We have sent the reset email to ${email}`\n                            ) : (\n                                \"Have no fear. We’ll email you instructions to reset your password. If you dont have access to your email we can try account recovery\"\n                            )\n                        }\n                    </p>\n\n                    <form onSubmit={handleOnSubmit}>\n                        {\n                            !emailSent && (\n                                <label>\n\n                                    <p>Email Address<sup>*</sup></p>\n                                    <input\n                                        required\n                                        type='email'\n                                        name='email'\n                                        value={email}\n                                        onChange={(e) => setEmail(e.target.value)}\n                                        placeholder='Enter your email address'\n                                    />\n\n                                </label>\n                            )\n                        }\n\n                        <button type='submit'>\n                            {\n                                emailSent ? (\"Resend Email\") : (\"Reset Password\")\n                            }\n                        </button>\n                    </form>\n\n                    <div>\n                        <Link to=\"/login\">\n                            <p className='flex flex-row gap-2 items-center justify-center'>\n                                <BiArrowBack />\n                                Back to login\n                            </p>\n                        </Link>\n                    </div>\n                </div>\n            )\n        }\n    </div>\n  )\n}\n","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/pages/UpdatePassword.jsx",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/pages/VerifyEmail.jsx",["489"],[],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport OtpInput from 'react-otp-input';\nimport { BiArrowBack } from \"react-icons/bi\";\nimport { sendOtp, signUp } from '../services/operations/authAPI';\nimport { useNavigate } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\nexport const VerifyEmail = () => {\n\n  const [otp, setOtp] = useState(\"\");\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const {signupData ,loading} = useSelector( (state) => state.auth);\n\n  useEffect( () => {\n    if(!signupData) {\n      navigate(\"/signup\");\n    }\n  }, [])\n\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n\n    const {\n      accountType,\n      firstName,\n      lastName,\n      email,\n      password,\n      confirmPassword\n    } = signupData;\n\n    dispatch(signUp(accountType,firstName,lastName,email,password,confirmPassword,otp,navigate));\n  }\n\n  return (\n    <div className='text-white'>\n      {\n        loading ? (\n          <div>\n            Loading...\n          </div>\n        ) : (\n          <div>\n            <h1>\n              Verfiy email\n            </h1>\n            <p>\n              A verification code has been sent to you. Enter the code below\n            </p>\n            <form onSubmit={handleOnSubmit}>\n              <OtpInput\n                value={otp}\n                onChange={setOtp}\n                numInputs={6}\n                renderSeparator={<span>-</span>}\n                renderInput={(props) => <input {...props} className='bg-richblack-600 text-richblack-5'/>}\n              />\n\n              <button type='submit'>\n                Verfiy email\n              </button>\n            </form>\n\n            <div>\n              <div>\n                <Link to=\"/login\">\n                  <p className='flex flex-row gap-2 items-center justify-center'>\n                    <BiArrowBack />\n                    Back to login\n                  </p>\n                </Link>\n              </div>\n              \n              <button\n              onClick={() => dispatch(sendOtp(signupData.email,navigate))}\n              >\n                Resend it\n              </button>\n            </div>\n          </div>\n        )\n      }\n    </div>\n  )\n}\n","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/pages/About.jsx",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/AboutPage/Quote.jsx",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/AboutPage/StatsComponent.jsx",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/AboutPage/LearningGrid.jsx",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/AboutPage/ContactFormSection.jsx",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Auth/ProfileDropDown.jsx",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/hooks/useOnClickOutside.js",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Dashboard/MyProfile.jsx",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/common/IconBtn.jsx",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/pages/Dashboard.jsx",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Dashboard/Sidebar.jsx",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/data/dashboard-links.js",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Dashboard/SidebarLink.jsx",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/common/ConfirmationModal.jsx",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Auth/PrivateRoute.jsx",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/pages/Error.jsx",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/pages/Contact.jsx",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/ContactPage/ContactDetails.jsx",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/ContactPage/ContactForm.jsx",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/ContactPage/ContactUsForm.jsx",["490"],[],"import React, { useEffect, useState } from \"react\"\nimport { useForm } from \"react-hook-form\"\n\nimport CountryCode from \"../../data/countrycode.json\"\nimport { apiConnector } from \"../../services/apiconnector\"\nimport { contactusEndpoint } from \"../../services/apis\"\n\nconst ContactUsForm = () => {\n  const [loading, setLoading] = useState(false)\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors, isSubmitSuccessful },\n  } = useForm()\n\n  const submitContactForm = async (data) => {\n    // console.log(\"Form Data - \", data)\n    try {\n      setLoading(true)\n      const res = await apiConnector(\n        \"POST\",\n        contactusEndpoint.CONTACT_US_API,\n        data\n      )\n      // console.log(\"Email Res - \", res)\n      setLoading(false)\n    } catch (error) {\n      console.log(\"ERROR MESSAGE - \", error.message)\n      setLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    if (isSubmitSuccessful) {\n      reset({\n        email: \"\",\n        firstname: \"\",\n        lastname: \"\",\n        message: \"\",\n        phoneNo: \"\",\n      })\n    }\n  }, [reset, isSubmitSuccessful])\n\n  return (\n    <form\n      className=\"flex flex-col gap-7\"\n      onSubmit={handleSubmit(submitContactForm)}\n    >\n      <div className=\"flex flex-col gap-5 lg:flex-row\">\n        <div className=\"flex flex-col gap-2 lg:w-[48%]\">\n          <label htmlFor=\"firstname\" className=\"lable-style\">\n            First Name\n          </label>\n          <input\n            type=\"text\"\n            name=\"firstname\"\n            id=\"firstname\"\n            placeholder=\"Enter first name\"\n            className=\"form-style\"\n            {...register(\"firstname\", { required: true })}\n          />\n          {errors.firstname && (\n            <span className=\"-mt-1 text-[12px] text-yellow-100\">\n              Please enter your name.\n            </span>\n          )}\n        </div>\n        <div className=\"flex flex-col gap-2 lg:w-[48%]\">\n          <label htmlFor=\"lastname\" className=\"lable-style\">\n            Last Name\n          </label>\n          <input\n            type=\"text\"\n            name=\"lastname\"\n            id=\"lastname\"\n            placeholder=\"Enter last name\"\n            className=\"form-style\"\n            {...register(\"lastname\")}\n          />\n        </div>\n      </div>\n\n      <div className=\"flex flex-col gap-2\">\n        <label htmlFor=\"email\" className=\"lable-style\">\n          Email Address\n        </label>\n        <input\n          type=\"email\"\n          name=\"email\"\n          id=\"email\"\n          placeholder=\"Enter email address\"\n          className=\"form-style\"\n          {...register(\"email\", { required: true })}\n        />\n        {errors.email && (\n          <span className=\"-mt-1 text-[12px] text-yellow-100\">\n            Please enter your Email address.\n          </span>\n        )}\n      </div>\n\n      <div className=\"flex flex-col gap-2\">\n        <label htmlFor=\"phonenumber\" className=\"lable-style\">\n          Phone Number\n        </label>\n\n        <div className=\"flex gap-5\">\n          <div className=\"flex w-[81px] flex-col gap-2\">\n            <select\n              type=\"text\"\n              name=\"firstname\"\n              id=\"firstname\"\n              placeholder=\"Enter first name\"\n              className=\"form-style\"\n              {...register(\"countrycode\", { required: true })}\n            >\n              {CountryCode.map((ele, i) => {\n                return (\n                  <option key={i} value={ele.code}>\n                    {ele.code} -{ele.country}\n                  </option>\n                )\n              })}\n            </select>\n          </div>\n          <div className=\"flex w-[calc(100%-90px)] flex-col gap-2\">\n            <input\n              type=\"number\"\n              name=\"phonenumber\"\n              id=\"phonenumber\"\n              placeholder=\"12345 67890\"\n              className=\"form-style\"\n              {...register(\"phoneNo\", {\n                required: {\n                  value: true,\n                  message: \"Please enter your Phone Number.\",\n                },\n                maxLength: { value: 12, message: \"Invalid Phone Number\" },\n                minLength: { value: 10, message: \"Invalid Phone Number\" },\n              })}\n            />\n          </div>\n        </div>\n        {errors.phoneNo && (\n          <span className=\"-mt-1 text-[12px] text-yellow-100\">\n            {errors.phoneNo.message}\n          </span>\n        )}\n      </div>\n\n      <div className=\"flex flex-col gap-2\">\n        <label htmlFor=\"message\" className=\"lable-style\">\n          Message\n        </label>\n        <textarea\n          name=\"message\"\n          id=\"message\"\n          cols=\"30\"\n          rows=\"7\"\n          placeholder=\"Enter your message here\"\n          className=\"form-style\"\n          {...register(\"message\", { required: true })}\n        />\n        {errors.message && (\n          <span className=\"-mt-1 text-[12px] text-yellow-100\">\n            Please enter your Message.\n          </span>\n        )}\n      </div>\n\n      <button\n        disabled={loading}\n        type=\"submit\"\n        className={`rounded-md bg-yellow-50 px-6 py-3 text-center text-[13px] font-bold text-black shadow-[2px_2px_0px_0px_rgba(255,255,255,0.18)] \n         ${\n           !loading &&\n           \"transition-all duration-200 hover:scale-95 hover:shadow-none\"\n         }  disabled:bg-richblack-500 sm:text-[16px] `}\n      >\n        Send Message\n      </button>\n    </form>\n  )\n}\n\nexport default ContactUsForm","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Dashboard/EnrolledCourses.jsx",["491","492"],[],"import ProgressBar from '@ramonak/react-progress-bar';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { getUserEnrolledCourses } from '../../../services/operations/profileAPI';\n\nexport const EnrolledCourses = () => {\n\n    const {token} = useSelector((state) => state.auth);\n    const [enrolledCourses, setEnrolledCourses] = useState(null);\n\n    const getEnrolledCourses = async() => {\n        try {\n            const response = await getUserEnrolledCourses(token);\n            setEnrolledCourses(response);\n        } catch(error) {\n            console.log(\"Unable to fetch enrolled courses\", error);\n        }\n    }\n\n    useEffect(() => {\n        getEnrolledCourses();\n    },[])\n\n  return (\n    <div className='text-white'>\n\n        <div>\n            Enrolled Courses\n        </div>\n\n        {\n            !enrolledCourses ? (\n                <div> Loading... </div>\n            ) : !enrolledCourses.length ? (\n                <p>You have not enrolled in any course yet.</p>\n            ) : (\n                <div>\n                    <div>\n                        <p>Course Name</p>\n                        <p>Duration</p>\n                        <p>Progress</p>\n                    </div>\n                    {/* Cards starts from here */}\n                    {\n                        enrolledCourses.map((course,index) => (\n                            <div>\n                                {/* Part 1 */}\n                                <div>\n                                    <img src={course.thumbnail}/>\n                                    <div>\n                                        <p>{course.courseName}</p>\n                                        <p>{course.courseDescription}</p>\n                                    </div>\n                                </div>\n                                {/* Part 2 */}\n                                <div>\n                                    {course?.totalDuration}\n                                </div>\n                                {/* Part 3 */}\n                                <div>\n                                    <p>Progress: {course.progressPercentage || 0}%</p>\n                                    <ProgressBar\n                                        completed={course.progressPercentage || 0}\n                                        height='8px'\n                                        isLabelVisible={false}\n                                    />\n                                </div>\n                            </div>\n                        ))\n                    }\n                </div>\n            )\n        }\n\n    </div>\n  )\n}\n","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/services/operations/profileAPI.js",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Dashboard/Cart/index.jsx",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Dashboard/Settings/index.jsx",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Dashboard/Settings/EditProfile.jsx",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Dashboard/Settings/ChangeProfilePicture.jsx",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Dashboard/Settings/DeleteAccount.jsx",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Dashboard/Settings/UpdatePassword.jsx",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/services/operations/SettingsAPI.js",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Dashboard/Cart/RenderCartCourses.jsx",["493"],[],"import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {GiNinjaStar} from \"react-icons/gi\"\nimport {RiDeleteBin6Line} from \"react-icons/ri\"\nimport { removeFromCart } from '../../../../slices/cartSlice'\nimport ReactStars from \"react-rating-stars-component\";\n\nconst RenderCartCourses = () => {\n\n    const {cart} = useSelector((state) => state.cart);\n    const dispatch = useDispatch();\n\n\n  return (\n    <div>\n    {\n        cart.map((course, index) => (\n            <div>\n                <div>\n                    <img src={course?.thumbnail} />\n                    <div>\n                        <p>{course?.courseName}</p>\n                        <p>{course?.category?.name}</p>\n                        <div>\n                            <span>4.8</span>\n                            <ReactStars\n                                count={5}\n                                size={20}\n                                edit={false}\n                                activeColor=\"#ffd700\"\n                                emtpyIcon={<GiNinjaStar />}\n                                fullIcon={<GiNinjaStar />}\n                            /> \n\n                            <span>{course?.ratingAndReviews?.length} Ratings</span>\n\n                        </div>\n                    </div>\n                </div>\n\n                <div>\n                    <button\n                    onClick={() => dispatch(removeFromCart(course._id))}\n                    >\n                        <RiDeleteBin6Line/>\n                        <span>Remove</span>\n                    </button>\n\n                    <p>Rs {course?.price} </p>\n                </div>\n            </div>\n        ))\n    }\n      \n    </div>\n  )\n}\n\nexport default RenderCartCourses\n","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Dashboard/Cart/RenderTotalAmount.jsx",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/slices/courseSlice.js",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/utils/dateFormatter.js",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/services/operations/courseDetailsAPI.js",["494"],[],"import { toast } from \"react-hot-toast\"\n\nimport { updateCompletedLectures } from \"../../slices/viewCourseSlice\"\n// import { setLoading } from \"../../slices/profileSlice\";\nimport { apiConnector } from \"../apiconnector\"\nimport { courseEndpoints } from \"../apis\"\n\nconst {\n  COURSE_DETAILS_API,\n  COURSE_CATEGORIES_API,\n  GET_ALL_COURSE_API,\n  CREATE_COURSE_API,\n  EDIT_COURSE_API,\n  CREATE_SECTION_API,\n  CREATE_SUBSECTION_API,\n  UPDATE_SECTION_API,\n  UPDATE_SUBSECTION_API,\n  DELETE_SECTION_API,\n  DELETE_SUBSECTION_API,\n  GET_ALL_INSTRUCTOR_COURSES_API,\n  DELETE_COURSE_API,\n  GET_FULL_COURSE_DETAILS_AUTHENTICATED,\n  CREATE_RATING_API,\n  LECTURE_COMPLETION_API,\n} = courseEndpoints\n\nexport const getAllCourses = async () => {\n  const toastId = toast.loading(\"Loading...\")\n  let result = []\n  try {\n    const response = await apiConnector(\"GET\", GET_ALL_COURSE_API)\n    if (!response?.data?.success) {\n      throw new Error(\"Could Not Fetch Course Categories\")\n    }\n    result = response?.data?.data\n  } catch (error) {\n    console.log(\"GET_ALL_COURSE_API API ERROR............\", error)\n    toast.error(error.message)\n  }\n  toast.dismiss(toastId)\n  return result\n}\n\nexport const fetchCourseDetails = async (courseId) => {\n  const toastId = toast.loading(\"Loading...\")\n  //   dispatch(setLoading(true));\n  let result = null\n  try {\n    const response = await apiConnector(\"POST\", COURSE_DETAILS_API, {\n      courseId,\n    })\n    console.log(\"COURSE_DETAILS_API API RESPONSE............\", response)\n\n    if (!response.data.success) {\n      throw new Error(response.data.message)\n    }\n    result = response.data\n  } catch (error) {\n    console.log(\"COURSE_DETAILS_API API ERROR............\", error)\n    result = error.response.data\n    // toast.error(error.response.data.message);\n  }\n  toast.dismiss(toastId)\n  //   dispatch(setLoading(false));\n  return result\n}\n\n// fetching the available course categories\nexport const fetchCourseCategories = async () => {\n  let result = []\n  try {\n    const response = await apiConnector(\"GET\", COURSE_CATEGORIES_API)\n    console.log(\"COURSE_CATEGORIES_API API RESPONSE............\", response)\n    if (!response?.data?.success) {\n      throw new Error(\"Could Not Fetch Course Categories\")\n    }\n    result = response?.data?.data\n  } catch (error) {\n    console.log(\"COURSE_CATEGORY_API API ERROR............\", error)\n    toast.error(error.message)\n  }\n  return result\n}\n\n// add the course details\nexport const addCourseDetails = async (data, token) => {\n  let result = null\n  const toastId = toast.loading(\"Loading...\")\n  try {\n    const response = await apiConnector(\"POST\", CREATE_COURSE_API, data, {\n      \"Content-Type\": \"multipart/form-data\",\n      Authorization: `Bearer ${token}`,\n    })\n    console.log(\"CREATE COURSE API RESPONSE............\", response)\n    if (!response?.data?.success) {\n      throw new Error(\"Could Not Add Course Details\")\n    }\n    toast.success(\"Course Details Added Successfully\")\n    result = response?.data?.data\n  } catch (error) {\n    console.log(\"CREATE COURSE API ERROR............\", error)\n    toast.error(error.message)\n  }\n  toast.dismiss(toastId)\n  return result\n}\n\n// edit the course details\nexport const editCourseDetails = async (data, token) => {\n  console.log(\"Inside Edit Course API\")\n  let result = null\n  const toastId = toast.loading(\"Loading...\")\n  try {\n    const response = await apiConnector(\"POST\", EDIT_COURSE_API, data, {\n      \"Content-Type\": \"multipart/form-data\",\n      Authorization: `Bearer ${token}`,\n    })\n    console.log(\"EDIT COURSE API RESPONSE............\", response)\n    if (!response?.data?.success) {\n      throw new Error(\"Could Not Update Course Details\")\n    }\n    toast.success(\"Course Details Updated Successfully\")\n    result = response?.data?.data\n  } catch (error) {\n    console.log(\"EDIT COURSE API ERROR............\", error)\n    toast.error(error.message)\n  }\n  toast.dismiss(toastId)\n  return result\n}\n\n// create a section\nexport const createSection = async (data, token) => {\n  let result = null\n  const toastId = toast.loading(\"Loading...\")\n  try {\n    const response = await apiConnector(\"POST\", CREATE_SECTION_API, data, {\n      Authorization: `Bearer ${token}`,\n    })\n    console.log(\"CREATE SECTION API RESPONSE............\", response)\n    if (!response?.data?.success) {\n      throw new Error(\"Could Not Create Section\")\n    }\n    toast.success(\"Course Section Created\")\n    result = response?.data?.updatedCourse\n  } catch (error) {\n    console.log(\"CREATE SECTION API ERROR............\", error)\n    toast.error(error.message)\n  }\n  toast.dismiss(toastId)\n  return result\n}\n\n// create a subsection\nexport const createSubSection = async (data, token) => {\n  let result = null\n  const toastId = toast.loading(\"Loading...\")\n  try {\n    const response = await apiConnector(\"POST\", CREATE_SUBSECTION_API, data, {\n      Authorization: `Bearer ${token}`,\n    })\n    console.log(\"CREATE SUB-SECTION API RESPONSE............\", response)\n    if (!response?.data?.success) {\n      throw new Error(\"Could Not Add Lecture\")\n    }\n    toast.success(\"Lecture Added\")\n    result = response?.data?.data\n  } catch (error) {\n    console.log(\"CREATE SUB-SECTION API ERROR............\", error)\n    toast.error(error.message)\n  }\n  toast.dismiss(toastId)\n  return result\n}\n\n// update a section\nexport const updateSection = async (data, token) => {\n  let result = null\n  const toastId = toast.loading(\"Loading...\")\n  try {\n    const response = await apiConnector(\"POST\", UPDATE_SECTION_API, data, {\n      Authorization: `Bearer ${token}`,\n    })\n    console.log(\"UPDATE SECTION API RESPONSE............\", response)\n    if (!response?.data?.success) {\n      throw new Error(\"Could Not Update Section\")\n    }\n    toast.success(\"Course Section Updated\")\n    result = response?.data?.data\n  } catch (error) {\n    console.log(\"UPDATE SECTION API ERROR............\", error)\n    toast.error(error.message)\n  }\n  toast.dismiss(toastId)\n  return result\n}\n\n// update a subsection\nexport const updateSubSection = async (data, token) => {\n  let result = null\n  const toastId = toast.loading(\"Loading...\")\n  try {\n    const response = await apiConnector(\"POST\", UPDATE_SUBSECTION_API, data, {\n      Authorization: `Bearer ${token}`,\n    })\n    console.log(\"UPDATE SUB-SECTION API RESPONSE............\", response)\n    if (!response?.data?.success) {\n      throw new Error(\"Could Not Update Lecture\")\n    }\n    toast.success(\"Lecture Updated\")\n    result = response?.data?.data\n  } catch (error) {\n    console.log(\"UPDATE SUB-SECTION API ERROR............\", error)\n    toast.error(error.message)\n  }\n  toast.dismiss(toastId)\n  return result\n}\n\n// delete a section\nexport const deleteSection = async (data, token) => {\n  let result = null\n  const toastId = toast.loading(\"Loading...\")\n  try {\n    const response = await apiConnector(\"POST\", DELETE_SECTION_API, data, {\n      Authorization: `Bearer ${token}`,\n    })\n    console.log(\"DELETE SECTION API RESPONSE............\", response)\n    if (!response?.data?.success) {\n      throw new Error(\"Could Not Delete Section\")\n    }\n    toast.success(\"Course Section Deleted\")\n    result = response?.data?.data\n  } catch (error) {\n    console.log(\"DELETE SECTION API ERROR............\", error)\n    toast.error(error.message)\n  }\n  toast.dismiss(toastId)\n  return result\n}\n// delete a subsection\nexport const deleteSubSection = async (data, token) => {\n  let result = null\n  const toastId = toast.loading(\"Loading...\")\n  try {\n    const response = await apiConnector(\"POST\", DELETE_SUBSECTION_API, data, {\n      Authorization: `Bearer ${token}`,\n    })\n    console.log(\"DELETE SUB-SECTION API RESPONSE............\", response)\n    if (!response?.data?.success) {\n      throw new Error(\"Could Not Delete Lecture\")\n    }\n    toast.success(\"Lecture Deleted\")\n    result = response?.data?.data\n  } catch (error) {\n    console.log(\"DELETE SUB-SECTION API ERROR............\", error)\n    toast.error(error.message)\n  }\n  toast.dismiss(toastId)\n  return result\n}\n\n// fetching all courses under a specific instructor\nexport const fetchInstructorCourses = async (token) => {\n  let result = []\n  const toastId = toast.loading(\"Loading...\")\n  try {\n    const response = await apiConnector(\n      \"GET\",\n      GET_ALL_INSTRUCTOR_COURSES_API,\n      null,\n      {\n        Authorization: `Bearer ${token}`,\n      }\n    )\n    console.log(\"INSTRUCTOR COURSES API RESPONSE............\", response)\n    if (!response?.data?.success) {\n      throw new Error(\"Could Not Fetch Instructor Courses\")\n    }\n    result = response?.data?.data\n  } catch (error) {\n    console.log(\"INSTRUCTOR COURSES API ERROR............\", error)\n    toast.error(error.message)\n  }\n  toast.dismiss(toastId)\n  return result\n}\n\n// delete a course\nexport const deleteCourse = async (data, token) => {\n  const toastId = toast.loading(\"Loading...\")\n  try {\n    const response = await apiConnector(\"DELETE\", DELETE_COURSE_API, data, {\n      Authorization: `Bearer ${token}`,\n    })\n    console.log(\"DELETE COURSE API RESPONSE............\", response)\n    if (!response?.data?.success) {\n      throw new Error(\"Could Not Delete Course\")\n    }\n    toast.success(\"Course Deleted\")\n  } catch (error) {\n    console.log(\"DELETE COURSE API ERROR............\", error)\n    toast.error(error.message)\n  }\n  toast.dismiss(toastId)\n}\n\n// get full details of a course\nexport const getFullDetailsOfCourse = async (courseId, token) => {\n  const toastId = toast.loading(\"Loading...\")\n  //   dispatch(setLoading(true));\n  let result = null\n  try {\n    const response = await apiConnector(\n      \"POST\",\n      GET_FULL_COURSE_DETAILS_AUTHENTICATED,\n      {\n        courseId,\n      },\n      {\n        Authorization: `Bearer ${token}`,\n      }\n    )\n    console.log(\"COURSE_FULL_DETAILS_API API RESPONSE............\", response)\n\n    if (!response.data.success) {\n      throw new Error(response.data.message)\n    }\n    result = response?.data?.data\n  } catch (error) {\n    console.log(\"COURSE_FULL_DETAILS_API API ERROR............\", error)\n    result = error.response.data\n    // toast.error(error.response.data.message);\n  }\n  toast.dismiss(toastId)\n  //   dispatch(setLoading(false));\n  return result\n}\n\n// mark a lecture as complete\nexport const markLectureAsComplete = async (data, token) => {\n  let result = null\n  console.log(\"mark complete data\", data)\n  const toastId = toast.loading(\"Loading...\")\n  try {\n    const response = await apiConnector(\"POST\", LECTURE_COMPLETION_API, data, {\n      Authorization: `Bearer ${token}`,\n    })\n    console.log(\n      \"MARK_LECTURE_AS_COMPLETE_API API RESPONSE............\",\n      response\n    )\n\n    if (!response.data.message) {\n      throw new Error(response.data.error)\n    }\n    toast.success(\"Lecture Completed\")\n    result = true\n  } catch (error) {\n    console.log(\"MARK_LECTURE_AS_COMPLETE_API API ERROR............\", error)\n    toast.error(error.message)\n    result = false\n  }\n  toast.dismiss(toastId)\n  return result\n}\n\n// create a rating for course\nexport const createRating = async (data, token) => {\n  const toastId = toast.loading(\"Loading...\")\n  let success = false\n  try {\n    const response = await apiConnector(\"POST\", CREATE_RATING_API, data, {\n      Authorization: `Bearer ${token}`,\n    })\n    console.log(\"CREATE RATING API RESPONSE............\", response)\n    if (!response?.data?.success) {\n      throw new Error(\"Could Not Create Rating\")\n    }\n    toast.success(\"Rating Created\")\n    success = true\n  } catch (error) {\n    success = false\n    console.log(\"CREATE RATING API ERROR............\", error)\n    toast.error(error.message)\n  }\n  toast.dismiss(toastId)\n  return success\n}","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/slices/viewCourseSlice.js",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/pages/Catalog.jsx",["495"],[],"import React, { useEffect, useState } from 'react'\nimport Footer from '../components/common/Footer'\nimport { useParams } from 'react-router-dom'\nimport { apiConnector } from '../services/apiconnector';\nimport { categories } from '../services/apis';\nimport { getCatalogaPageData } from '../services/operations/pageAndComponentData';\nimport Course_Card from '../components/core/Catalog/Course_Card';\nimport CourseSlider from '../components/core/Catalog/CourseSlider';\n\nconst Catalog = () => {\n\n    const {catalogName} = useParams();\n    const [catalogPageData, setCatalogPageData] = useState(null);\n    const [categoryId, setCategoryId] = useState(\"\");\n\n    //Fetch all categories\n    useEffect(()=> {\n        const getCategories = async() => {\n            const res = await apiConnector(\"GET\", categories.CATEGORIES_API);\n            const category_id = \n            res?.data?.data?.filter((ct) => ct.name.split(\" \").join(\"-\").toLowerCase() === catalogName)[0]._id;\n            setCategoryId(category_id);\n        }\n        getCategories();\n    },[catalogName]);\n\n    useEffect(() => {\n        const getCategoryDetails = async() => {\n            try{\n                const res = await getCatalogaPageData(categoryId);\n                console.log(\"PRinting res: \", res);\n                setCatalogPageData(res);\n            }\n            catch(error) {\n                console.log(error)\n            }\n        }\n        if(categoryId) {\n            getCategoryDetails();\n        }\n        \n    },[categoryId]);\n\n\n  return (\n    <div className='text-white'>\n\n        <div>\n            <p>{`Home / Catalog /`}\n            <span>\n                {catalogPageData?.data?.selectedCategory?.name}\n            </span></p>\n            <p> {catalogPageData?.data?.selectedCategory?.name} </p>\n            <p> {catalogPageData?.data?.selectedCategory?.description}</p>\n        </div>\n\n        <div>\n            {/* section1 */}\n            <div>\n            <div>Courses to get you started</div>\n                <div className=' flex gap-x-3'>\n                    <p>Most Popular</p>\n                    <p>New</p>\n                </div>\n                <div>\n                    <CourseSlider Courses={catalogPageData?.data?.selectedCategory?.courses} />\n                </div>\n            </div>  \n\n            {/* section2 */}\n            <div>\n            <div>Top Courses in {catalogPageData?.data?.selectedCategory?.name}</div>\n                <div>\n                    <CourseSlider Courses={catalogPageData?.data?.differentCategory?.courses}/>\n                </div>\n            </div>\n\n            {/* section3 */}\n            <div>\n                <div>Frequently Bought</div>\n                <div className='py-8'>\n\n                    <div className='grid grid-cols-1 lg:grid-cols-2'>\n\n                        {\n                            catalogPageData?.data?.mostSellingCourses?.slice(0,4)\n                            .map((course, index) => (\n                                <Course_Card course={course} key={index} Height={\"h-[400px]\"}/>\n                            ))\n                        }\n\n                    </div>\n\n                </div>\n            </div>\n\n        </div>\n    <Footer />\n    </div>\n  )\n}\n\nexport default Catalog\n","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Dashboard/EditCourse/index.js",["496"],["497"],"import { useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useParams } from \"react-router-dom\"\n\nimport {\n  fetchCourseDetails,\n  getFullDetailsOfCourse,\n} from \"../../../../services/operations/courseDetailsAPI\"\nimport { setCourse, setEditCourse } from \"../../../../slices/courseSlice\"\nimport RenderSteps from \"../AddCourse/RenderSteps\"\n\nexport default function EditCourse() {\n  const dispatch = useDispatch()\n  const { courseId } = useParams()\n  const { course } = useSelector((state) => state.course)\n  const [loading, setLoading] = useState(false)\n  const { token } = useSelector((state) => state.auth)\n\n  useEffect(() => {\n    ;(async () => {\n      setLoading(true)\n      const result = await getFullDetailsOfCourse(courseId, token)\n      if (result?.courseDetails) {\n        dispatch(setEditCourse(true))\n        dispatch(setCourse(result?.courseDetails))\n      }\n      setLoading(false)\n    })()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  if (loading) {\n    return (\n      <div className=\"grid flex-1 place-items-center\">\n        <div className=\"spinner\"></div>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <h1 className=\"mb-14 text-3xl font-medium text-richblack-5\">\n        Edit Course\n      </h1>\n      <div className=\"mx-auto max-w-[600px]\">\n        {course ? (\n          <RenderSteps />\n        ) : (\n          <p className=\"mt-14 text-center text-3xl font-semibold text-richblack-100\">\n            Course not found\n          </p>\n        )}\n      </div>\n    </div>\n  )\n}","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Dashboard/AddCourse/index.jsx",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/services/operations/pageAndComponentData.js",["498"],[],"import React from 'react'\nimport {toast} from \"react-hot-toast\"\nimport { apiConnector } from '../apiconnector';\nimport { catalogData } from '../apis';\n\nexport const getCatalogaPageData = async(categoryId) => {\n  const toastId = toast.loading(\"Loading...\");\n  let result = [];\n  try{\n        const response = await apiConnector(\"POST\", catalogData.CATALOGPAGEDATA_API, \n        {categoryId: categoryId,});\n\n        if(!response?.data?.success)\n            throw new Error(\"Could not Fetch Category page data\");\n\n         result = response?.data;\n\n  }\n  catch(error) {\n    console.log(\"CATALOG PAGE DATA API ERROR....\", error);\n    toast.error(error.message);\n    result = error.response?.data;\n  }\n  toast.dismiss(toastId);\n  return result;\n}\n\n","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Catalog/CourseSlider.jsx",["499","500"],[],"import React from 'react'\n\nimport {Swiper, SwiperSlide} from \"swiper/react\"\nimport \"swiper/css\"\nimport \"swiper/css/free-mode\"\nimport \"swiper/css/pagination\"\nimport { Autoplay, FreeMode, Navigation, Pagination } from 'swiper/modules'\n\nimport Course_Card from './Course_Card'\n\nconst CourseSlider = ({Courses}) => {\n  return (\n    <>\n        {\n            Courses?.length ? (\n                <Swiper\n                    slidesPerView={1}\n                    loop={true}\n                    spaceBetween={200}\n                    pagination={true}\n                    modules={[Autoplay,Pagination,Navigation]}\n                    className=\"mySwiper\"\n                    autoplay={{\n                    delay: 1000,\n                    disableOnInteraction: false,\n                    }}\n                    navigation={true}\n                    breakpoints={{\n                        1024:{slidesPerView:3,}\n                    }}\n                >\n                    {\n                        Courses?.map((course, index)=> (\n                            <SwiperSlide key={index}>\n                                <Course_Card course={course} Height={\"h-[250px]\"} />\n                            </SwiperSlide>\n                        ))\n                    }   \n                </Swiper>\n            ) : (\n                <p>No Course Found</p>\n            )\n\n        }\n    </>\n  )\n}\n\nexport default CourseSlider\n","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Catalog/Course_Card.jsx",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Dashboard/AddCourse/RenderSteps.jsx",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/utils/avgRating.js",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/common/RatingStars.jsx",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Dashboard/AddCourse/CourseBuilder/CourseBuilderForm.jsx",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Dashboard/AddCourse/CourseInformation/CourseInformationForm.jsx",[],["501"],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Dashboard/AddCourse/CourseInformation/RequirementField.jsx",[],["502","503"],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Dashboard/MyCourses.jsx",[],["504"],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Dashboard/InstructorCourses/CoursesTable.jsx",["505","506","507"],[],"import { useDispatch, useSelector } from \"react-redux\"\nimport { Table, Tbody, Td, Th, Thead, Tr } from \"react-super-responsive-table\"\n\nimport { setCourse, setEditCourse } from \"../../../../slices/courseSlice\"\nimport \"react-super-responsive-table/dist/SuperResponsiveTableStyle.css\"\nimport { useState } from \"react\"\nimport { FaCheck } from \"react-icons/fa\"\nimport { FiEdit2 } from \"react-icons/fi\"\nimport { HiClock } from \"react-icons/hi\"\nimport { RiDeleteBin6Line } from \"react-icons/ri\"\nimport { useNavigate } from \"react-router-dom\"\n\nimport { formatDate } from \"../../../../services/formatDate\"\nimport {\n  deleteCourse,\n  fetchInstructorCourses,\n} from \"../../../../services/operations/courseDetailsAPI\"\nimport { COURSE_STATUS } from \"../../../../utils/constants\"\nimport ConfirmationModal from \"../../../common/ConfirmationModal\"\n\nexport default function CoursesTable({ courses, setCourses }) {\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n  const { token } = useSelector((state) => state.auth)\n  const [loading, setLoading] = useState(false)\n  const [confirmationModal, setConfirmationModal] = useState(null)\n  const TRUNCATE_LENGTH = 30\n\n  const handleCourseDelete = async (courseId) => {\n    setLoading(true)\n    await deleteCourse({ courseId: courseId }, token)\n    const result = await fetchInstructorCourses(token)\n    if (result) {\n      setCourses(result)\n    }\n    setConfirmationModal(null)\n    setLoading(false)\n  }\n\n  // console.log(\"All Course \", courses)\n\n  return (\n    <>\n      <Table className=\"rounded-xl border border-richblack-800 \">\n        <Thead>\n          <Tr className=\"flex gap-x-10 rounded-t-md border-b border-b-richblack-800 px-6 py-2\">\n            <Th className=\"flex-1 text-left text-sm font-medium uppercase text-richblack-100\">\n              Courses\n            </Th>\n            <Th className=\"text-left text-sm font-medium uppercase text-richblack-100\">\n              Duration\n            </Th>\n            <Th className=\"text-left text-sm font-medium uppercase text-richblack-100\">\n              Price\n            </Th>\n            <Th className=\"text-left text-sm font-medium uppercase text-richblack-100\">\n              Actions\n            </Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          {courses?.length === 0 ? (\n            <Tr>\n              <Td className=\"py-10 text-center text-2xl font-medium text-richblack-100\">\n                No courses found\n                {/* TODO: Need to change this state */}\n              </Td>\n            </Tr>\n          ) : (\n            courses?.map((course) => (\n              <Tr\n                key={course._id}\n                className=\"flex gap-x-10 border-b border-richblack-800 px-6 py-8\"\n              >\n                <Td className=\"flex flex-1 gap-x-4\">\n                  <img\n                    src={course?.thumbnail}\n                    alt={course?.courseName}\n                    className=\"h-[148px] w-[220px] rounded-lg object-cover\"\n                  />\n                  <div className=\"flex flex-col justify-between\">\n                    <p className=\"text-lg font-semibold text-richblack-5\">\n                      {course.courseName}\n                    </p>\n                    <p className=\"text-xs text-richblack-300\">\n                      {course.courseDescription.split(\" \").length >\n                      TRUNCATE_LENGTH\n                        ? course.courseDescription\n                            .split(\" \")\n                            .slice(0, TRUNCATE_LENGTH)\n                            .join(\" \") + \"...\"\n                        : course.courseDescription}\n                    </p>\n                    <p className=\"text-[12px] text-white\">\n                      Created: {formatDate(course.createdAt)}\n                    </p>\n                    {course.status === COURSE_STATUS.DRAFT ? (\n                      <p className=\"flex w-fit flex-row items-center gap-2 rounded-full bg-richblack-700 px-2 py-[2px] text-[12px] font-medium text-pink-100\">\n                        <HiClock size={14} />\n                        Drafted\n                      </p>\n                    ) : (\n                      <p className=\"flex w-fit flex-row items-center gap-2 rounded-full bg-richblack-700 px-2 py-[2px] text-[12px] font-medium text-yellow-100\">\n                        <div className=\"flex h-3 w-3 items-center justify-center rounded-full bg-yellow-100 text-richblack-700\">\n                          <FaCheck size={8} />\n                        </div>\n                        Published\n                      </p>\n                    )}\n                  </div>\n                </Td>\n                <Td className=\"text-sm font-medium text-richblack-100\">\n                  2hr 30min\n                </Td>\n                <Td className=\"text-sm font-medium text-richblack-100\">\n                  ₹{course.price}\n                </Td>\n                <Td className=\"text-sm font-medium text-richblack-100 \">\n                  <button\n                    disabled={loading}\n                    onClick={() => {\n                      navigate(`/dashboard/edit-course/${course._id}`)\n                    }}\n                    title=\"Edit\"\n                    className=\"px-2 transition-all duration-200 hover:scale-110 hover:text-caribbeangreen-300\"\n                  >\n                    <FiEdit2 size={20} />\n                  </button>\n                  <button\n                    disabled={loading}\n                    onClick={() => {\n                      setConfirmationModal({\n                        text1: \"Do you want to delete this course?\",\n                        text2:\n                          \"All the data related to this course will be deleted\",\n                        btn1Text: !loading ? \"Delete\" : \"Loading...  \",\n                        btn2Text: \"Cancel\",\n                        btn1Handler: !loading\n                          ? () => handleCourseDelete(course._id)\n                          : () => {},\n                        btn2Handler: !loading\n                          ? () => setConfirmationModal(null)\n                          : () => {},\n                      })\n                    }}\n                    title=\"Delete\"\n                    className=\"px-1 transition-all duration-200 hover:scale-110 hover:text-[#ff0000]\"\n                  >\n                    <RiDeleteBin6Line size={20} />\n                  </button>\n                </Td>\n              </Tr>\n            ))\n          )}\n        </Tbody>\n      </Table>\n      {confirmationModal && <ConfirmationModal modalData={confirmationModal} />}\n    </>\n  )\n}","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/services/formatDate.js",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Dashboard/AddCourse/CourseInformation/ChipInput.jsx",[],["508","509"],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Dashboard/AddCourse/Upload.jsx",["510"],["511","512"],"import { useEffect, useRef, useState } from \"react\"\nimport { useDropzone } from \"react-dropzone\"\nimport { FiUploadCloud } from \"react-icons/fi\"\nimport { useSelector } from \"react-redux\"\n\nimport \"video-react/dist/video-react.css\"\nimport { Player } from \"video-react\"\n\nexport default function Upload({\n  name,\n  label,\n  register,\n  setValue,\n  errors,\n  video = false,\n  viewData = null,\n  editData = null,\n}) {\n  const { course } = useSelector((state) => state.course)\n  const [selectedFile, setSelectedFile] = useState(null)\n  const [previewSource, setPreviewSource] = useState(\n    viewData ? viewData : editData ? editData : \"\"\n  )\n  const inputRef = useRef(null)\n\n  const onDrop = (acceptedFiles) => {\n    const file = acceptedFiles[0]\n    if (file) {\n      previewFile(file)\n      setSelectedFile(file)\n    }\n  }\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    accept: !video\n      ? { \"image/*\": [\".jpeg\", \".jpg\", \".png\"] }\n      : { \"video/*\": [\".mp4\"] },\n    onDrop,\n  })\n\n  const previewFile = (file) => {\n    // console.log(file)\n    const reader = new FileReader()\n    reader.readAsDataURL(file)\n    reader.onloadend = () => {\n      setPreviewSource(reader.result)\n    }\n  }\n\n  useEffect(() => {\n    register(name, { required: true })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [register])\n\n  useEffect(() => {\n    setValue(name, selectedFile)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedFile, setValue])\n\n  return (\n    <div className=\"flex flex-col space-y-2\">\n      <label className=\"text-sm text-richblack-5\" htmlFor={name}>\n        {label} {!viewData && <sup className=\"text-pink-200\">*</sup>}\n      </label>\n      <div\n        className={`${\n          isDragActive ? \"bg-richblack-600\" : \"bg-richblack-700\"\n        } flex min-h-[250px] cursor-pointer items-center justify-center rounded-md border-2 border-dotted border-richblack-500`}\n      >\n        {previewSource ? (\n          <div className=\"flex w-full flex-col p-6\">\n            {!video ? (\n              <img\n                src={previewSource}\n                alt=\"Preview\"\n                className=\"h-full w-full rounded-md object-cover\"\n              />\n            ) : (\n              <Player aspectRatio=\"16:9\" playsInline src={previewSource} />\n            )}\n            {!viewData && (\n              <button\n                type=\"button\"\n                onClick={() => {\n                  setPreviewSource(\"\")\n                  setSelectedFile(null)\n                  setValue(name, null)\n                }}\n                className=\"mt-3 text-richblack-400 underline\"\n              >\n                Cancel\n              </button>\n            )}\n          </div>\n        ) : (\n          <div\n            className=\"flex w-full flex-col items-center p-6\"\n            {...getRootProps()}\n          >\n            <input {...getInputProps()} ref={inputRef} />\n            <div className=\"grid aspect-square w-14 place-items-center rounded-full bg-pure-greys-800\">\n              <FiUploadCloud className=\"text-2xl text-yellow-50\" />\n            </div>\n            <p className=\"mt-2 max-w-[200px] text-center text-sm text-richblack-200\">\n              Drag and drop an {!video ? \"image\" : \"video\"}, or click to{\" \"}\n              <span className=\"font-semibold text-yellow-50\">Browse</span> a\n              file\n            </p>\n            <ul className=\"mt-10 flex list-disc justify-between space-x-12 text-center  text-xs text-richblack-200\">\n              <li>Aspect ratio 16:9</li>\n              <li>Recommended size 1024x576</li>\n            </ul>\n          </div>\n        )}\n      </div>\n      {errors[name] && (\n        <span className=\"ml-2 text-xs tracking-wide text-pink-200\">\n          {label} is required\n        </span>\n      )}\n    </div>\n  )\n}","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Dashboard/AddCourse/PublishCourse/index.jsx",["513"],[],"import { useEffect, useState } from \"react\"\nimport { useForm } from \"react-hook-form\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useNavigate } from \"react-router-dom\"\n\nimport { editCourseDetails } from \"../../../../../services/operations/courseDetailsAPI\"\nimport { resetCourseState, setStep } from \"../../../../../slices/courseSlice\"\nimport { COURSE_STATUS } from \"../../../../../utils/constants\"\nimport IconBtn from \"../../../../common/IconBtn\"\n\nexport default function PublishCourse() {\n  const { register, handleSubmit, setValue, getValues } = useForm()\n\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n  const { token } = useSelector((state) => state.auth)\n  const { course } = useSelector((state) => state.course)\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    if (course?.status === COURSE_STATUS.PUBLISHED) {\n      setValue(\"public\", true)\n    }\n  }, [])\n\n  const goBack = () => {\n    dispatch(setStep(2))\n  }\n\n  const goToCourses = () => {\n    dispatch(resetCourseState())\n    navigate(\"/dashboard/my-courses\")\n  }\n\n  const handleCoursePublish = async () => {\n    // check if form has been updated or not\n    if (\n      (course?.status === COURSE_STATUS.PUBLISHED &&\n        getValues(\"public\") === true) ||\n      (course?.status === COURSE_STATUS.DRAFT && getValues(\"public\") === false)\n    ) {\n      // form has not been updated\n      // no need to make api call\n      goToCourses()\n      return\n    }\n    const formData = new FormData()\n    formData.append(\"courseId\", course._id)\n    const courseStatus = getValues(\"public\")\n      ? COURSE_STATUS.PUBLISHED\n      : COURSE_STATUS.DRAFT\n    formData.append(\"status\", courseStatus)\n    setLoading(true)\n    const result = await editCourseDetails(formData, token)\n    if (result) {\n      goToCourses()\n    }\n    setLoading(false)\n  }\n\n  const onSubmit = (data) => {\n    // console.log(data)\n    handleCoursePublish()\n  }\n\n  return (\n    <div className=\"rounded-md border-[1px] border-richblack-700 bg-richblack-800 p-6\">\n      <p className=\"text-2xl font-semibold text-richblack-5\">\n        Publish Settings\n      </p>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        {/* Checkbox */}\n        <div className=\"my-6 mb-8\">\n          <label htmlFor=\"public\" className=\"inline-flex items-center text-lg\">\n            <input\n              type=\"checkbox\"\n              id=\"public\"\n              {...register(\"public\")}\n              className=\"border-gray-300 h-4 w-4 rounded bg-richblack-500 text-richblack-400 focus:ring-2 focus:ring-richblack-5\"\n            />\n            <span className=\"ml-2 text-richblack-400\">\n              Make this course as public\n            </span>\n          </label>\n        </div>\n\n        {/* Next Prev Button */}\n        <div className=\"ml-auto flex max-w-max items-center gap-x-4\">\n          <button\n            disabled={loading}\n            type=\"button\"\n            onClick={goBack}\n            className=\"flex cursor-pointer items-center gap-x-2 rounded-md bg-richblack-300 py-[8px] px-[20px] font-semibold text-richblack-900\"\n          >\n            Back\n          </button>\n          <IconBtn disabled={loading} text=\"Save Changes\" />\n        </div>\n      </form>\n    </div>\n  )\n}","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Dashboard/AddCourse/CourseBuilder/NestedView.jsx",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/components/core/Dashboard/AddCourse/CourseBuilder/SubSectionModal.jsx",["514"],[],"import { useEffect, useState } from \"react\"\nimport { useForm } from \"react-hook-form\"\nimport { toast } from \"react-hot-toast\"\nimport { RxCross2 } from \"react-icons/rx\"\nimport { useDispatch, useSelector } from \"react-redux\"\n\nimport {\n  createSubSection,\n  updateSubSection,\n} from \"../../../../../services/operations/courseDetailsAPI\"\nimport { setCourse } from \"../../../../../slices/courseSlice\"\nimport IconBtn from \"../../../../common/IconBtn\"\nimport Upload from \"../Upload\"\n\nexport default function SubSectionModal({\n  modalData,\n  setModalData,\n  add = false,\n  view = false,\n  edit = false,\n}) {\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: { errors },\n    getValues,\n  } = useForm()\n\n  // console.log(\"view\", view)\n  // console.log(\"edit\", edit)\n  // console.log(\"add\", add)\n\n  const dispatch = useDispatch()\n  const [loading, setLoading] = useState(false)\n  const { token } = useSelector((state) => state.auth)\n  const { course } = useSelector((state) => state.course)\n\n  useEffect(() => {\n    if (view || edit) {\n      // console.log(\"modalData\", modalData)\n      setValue(\"lectureTitle\", modalData.title)\n      setValue(\"lectureDesc\", modalData.description)\n      setValue(\"lectureVideo\", modalData.videoUrl)\n    }\n  }, [])\n\n  // detect whether form is updated or not\n  const isFormUpdated = () => {\n    const currentValues = getValues()\n    // console.log(\"changes after editing form values:\", currentValues)\n    if (\n      currentValues.lectureTitle !== modalData.title ||\n      currentValues.lectureDesc !== modalData.description ||\n      currentValues.lectureVideo !== modalData.videoUrl\n    ) {\n      return true\n    }\n    return false\n  }\n\n  // handle the editing of subsection\n  const handleEditSubsection = async () => {\n    const currentValues = getValues()\n    // console.log(\"changes after editing form values:\", currentValues)\n    const formData = new FormData()\n    // console.log(\"Values After Editing form values:\", currentValues)\n    formData.append(\"sectionId\", modalData.sectionId)\n    formData.append(\"subSectionId\", modalData._id)\n    if (currentValues.lectureTitle !== modalData.title) {\n      formData.append(\"title\", currentValues.lectureTitle)\n    }\n    if (currentValues.lectureDesc !== modalData.description) {\n      formData.append(\"description\", currentValues.lectureDesc)\n    }\n    if (currentValues.lectureVideo !== modalData.videoUrl) {\n      formData.append(\"video\", currentValues.lectureVideo)\n    }\n    setLoading(true)\n    const result = await updateSubSection(formData, token)\n    if (result) {\n      // console.log(\"result\", result)\n      // update the structure of course\n      const updatedCourseContent = course.courseContent.map((section) =>\n        section._id === modalData.sectionId ? result : section\n      )\n      const updatedCourse = { ...course, courseContent: updatedCourseContent }\n      dispatch(setCourse(updatedCourse))\n    }\n    setModalData(null)\n    setLoading(false)\n  }\n\n  const onSubmit = async (data) => {\n    // console.log(data)\n    if (view) return\n\n    if (edit) {\n      if (!isFormUpdated()) {\n        toast.error(\"No changes made to the form\")\n      } else {\n        handleEditSubsection()\n      }\n      return\n    }\n\n    const formData = new FormData()\n    formData.append(\"sectionId\", modalData)\n    formData.append(\"title\", data.lectureTitle)\n    formData.append(\"description\", data.lectureDesc)\n    formData.append(\"video\", data.lectureVideo)\n    setLoading(true)\n    const result = await createSubSection(formData, token)\n    if (result) {\n      // update the structure of course\n      const updatedCourseContent = course.courseContent.map((section) =>\n        section._id === modalData ? result : section\n      )\n      const updatedCourse = { ...course, courseContent: updatedCourseContent }\n      dispatch(setCourse(updatedCourse))\n    }\n    setModalData(null)\n    setLoading(false)\n  }\n\n  return (\n    <div className=\"fixed inset-0 z-[1000] !mt-0 grid h-screen w-screen place-items-center overflow-auto bg-white bg-opacity-10 backdrop-blur-sm\">\n      <div className=\"my-10 w-11/12 max-w-[700px] rounded-lg border border-richblack-400 bg-richblack-800\">\n        {/* Modal Header */}\n        <div className=\"flex items-center justify-between rounded-t-lg bg-richblack-700 p-5\">\n          <p className=\"text-xl font-semibold text-richblack-5\">\n            {view && \"Viewing\"} {add && \"Adding\"} {edit && \"Editing\"} Lecture\n          </p>\n          <button onClick={() => (!loading ? setModalData(null) : {})}>\n            <RxCross2 className=\"text-2xl text-richblack-5\" />\n          </button>\n        </div>\n        {/* Modal Form */}\n        <form\n          onSubmit={handleSubmit(onSubmit)}\n          className=\"space-y-8 px-8 py-10\"\n        >\n          {/* Lecture Video Upload */}\n          <Upload\n            name=\"lectureVideo\"\n            label=\"Lecture Video\"\n            register={register}\n            setValue={setValue}\n            errors={errors}\n            video={true}\n            viewData={view ? modalData.videoUrl : null}\n            editData={edit ? modalData.videoUrl : null}\n          />\n          {/* Lecture Title */}\n          <div className=\"flex flex-col space-y-2\">\n            <label className=\"text-sm text-richblack-5\" htmlFor=\"lectureTitle\">\n              Lecture Title {!view && <sup className=\"text-pink-200\">*</sup>}\n            </label>\n            <input\n              disabled={view || loading}\n              id=\"lectureTitle\"\n              placeholder=\"Enter Lecture Title\"\n              {...register(\"lectureTitle\", { required: true })}\n              className=\"form-style w-full\"\n            />\n            {errors.lectureTitle && (\n              <span className=\"ml-2 text-xs tracking-wide text-pink-200\">\n                Lecture title is required\n              </span>\n            )}\n          </div>\n          {/* Lecture Description */}\n          <div className=\"flex flex-col space-y-2\">\n            <label className=\"text-sm text-richblack-5\" htmlFor=\"lectureDesc\">\n              Lecture Description{\" \"}\n              {!view && <sup className=\"text-pink-200\">*</sup>}\n            </label>\n            <textarea\n              disabled={view || loading}\n              id=\"lectureDesc\"\n              placeholder=\"Enter Lecture Description\"\n              {...register(\"lectureDesc\", { required: true })}\n              className=\"form-style resize-x-none min-h-[130px] w-full\"\n            />\n            {errors.lectureDesc && (\n              <span className=\"ml-2 text-xs tracking-wide text-pink-200\">\n                Lecture Description is required\n              </span>\n            )}\n          </div>\n          {!view && (\n            <div className=\"flex justify-end\">\n              <IconBtn\n                disabled={loading}\n                text={loading ? \"Loading..\" : edit ? \"Save Changes\" : \"Save\"}\n              />\n            </div>\n          )}\n        </form>\n      </div>\n    </div>\n  )\n}","/Users/sarthakkhetarpal/Downloads/StudyNotion/src/pages/CourseDetails.jsx",[],[],"/Users/sarthakkhetarpal/Downloads/StudyNotion/src/services/operations/studentFeaturesAPI.js",[],[],{"ruleId":"515","severity":1,"message":"516","line":31,"column":9,"nodeType":"517","messageId":"518","endLine":31,"endColumn":17},{"ruleId":"515","severity":1,"message":"519","line":32,"column":9,"nodeType":"517","messageId":"518","endLine":32,"endColumn":17},{"ruleId":"520","severity":1,"message":"521","line":45,"column":41,"nodeType":"522","endLine":45,"endColumn":66},{"ruleId":"523","severity":1,"message":"524","line":62,"column":53,"nodeType":"525","messageId":"526","endLine":62,"endColumn":55},{"ruleId":"527","severity":1,"message":"528","line":74,"column":17,"nodeType":"522","endLine":74,"endColumn":106},{"ruleId":"527","severity":1,"message":"528","line":24,"column":9,"nodeType":"522","endLine":26,"endColumn":61},{"ruleId":"527","severity":1,"message":"528","line":28,"column":9,"nodeType":"522","endLine":30,"endColumn":43},{"ruleId":"527","severity":1,"message":"528","line":32,"column":9,"nodeType":"522","endLine":34,"endColumn":62},{"ruleId":"520","severity":1,"message":"521","line":14,"column":17,"nodeType":"522","endLine":14,"endColumn":46},{"ruleId":"515","severity":1,"message":"529","line":1,"column":10,"nodeType":"517","messageId":"518","endLine":1,"endColumn":18},{"ruleId":"515","severity":1,"message":"530","line":6,"column":8,"nodeType":"517","messageId":"518","endLine":6,"endColumn":13},{"ruleId":"531","severity":1,"message":"532","line":20,"column":6,"nodeType":"533","endLine":20,"endColumn":8,"suggestions":"534"},{"ruleId":"515","severity":1,"message":"535","line":21,"column":13,"nodeType":"517","messageId":"518","endLine":21,"endColumn":16},{"ruleId":"531","severity":1,"message":"536","line":22,"column":7,"nodeType":"533","endLine":22,"endColumn":9,"suggestions":"537"},{"ruleId":"520","severity":1,"message":"521","line":49,"column":37,"nodeType":"522","endLine":49,"endColumn":66},{"ruleId":"520","severity":1,"message":"521","line":20,"column":21,"nodeType":"522","endLine":20,"endColumn":52},{"ruleId":"515","severity":1,"message":"538","line":3,"column":10,"nodeType":"517","messageId":"518","endLine":3,"endColumn":33},{"ruleId":"539","severity":1,"message":"540","line":88,"column":33,"nodeType":"522","messageId":"541","endLine":88,"endColumn":96},{"ruleId":"515","severity":1,"message":"542","line":6,"column":3,"nodeType":"517","messageId":"518","endLine":6,"endColumn":21},{"ruleId":"531","severity":1,"message":"543","line":30,"column":6,"nodeType":"533","endLine":30,"endColumn":8,"suggestions":"544","suppressions":"545"},{"ruleId":"515","severity":1,"message":"546","line":1,"column":8,"nodeType":"517","messageId":"518","endLine":1,"endColumn":13},{"ruleId":"515","severity":1,"message":"547","line":7,"column":20,"nodeType":"517","messageId":"518","endLine":7,"endColumn":28},{"ruleId":"539","severity":1,"message":"540","line":35,"column":33,"nodeType":"522","messageId":"541","endLine":35,"endColumn":85},{"ruleId":"531","severity":1,"message":"548","line":60,"column":6,"nodeType":"533","endLine":60,"endColumn":8,"suggestions":"549","suppressions":"550"},{"ruleId":"531","severity":1,"message":"551","line":22,"column":6,"nodeType":"533","endLine":22,"endColumn":8,"suggestions":"552","suppressions":"553"},{"ruleId":"531","severity":1,"message":"554","line":27,"column":6,"nodeType":"533","endLine":27,"endColumn":24,"suggestions":"555","suppressions":"556"},{"ruleId":"531","severity":1,"message":"557","line":24,"column":6,"nodeType":"533","endLine":24,"endColumn":8,"suggestions":"558","suppressions":"559"},{"ruleId":"515","severity":1,"message":"560","line":4,"column":10,"nodeType":"517","messageId":"518","endLine":4,"endColumn":19},{"ruleId":"515","severity":1,"message":"561","line":4,"column":21,"nodeType":"517","messageId":"518","endLine":4,"endColumn":34},{"ruleId":"515","severity":1,"message":"516","line":22,"column":9,"nodeType":"517","messageId":"518","endLine":22,"endColumn":17},{"ruleId":"531","severity":1,"message":"562","line":30,"column":6,"nodeType":"533","endLine":30,"endColumn":8,"suggestions":"563","suppressions":"564"},{"ruleId":"531","severity":1,"message":"554","line":35,"column":6,"nodeType":"533","endLine":35,"endColumn":13,"suggestions":"565","suppressions":"566"},{"ruleId":"515","severity":1,"message":"567","line":19,"column":11,"nodeType":"517","messageId":"518","endLine":19,"endColumn":17},{"ruleId":"531","severity":1,"message":"568","line":53,"column":6,"nodeType":"533","endLine":53,"endColumn":16,"suggestions":"569","suppressions":"570"},{"ruleId":"531","severity":1,"message":"568","line":58,"column":6,"nodeType":"533","endLine":58,"endColumn":30,"suggestions":"571","suppressions":"572"},{"ruleId":"531","severity":1,"message":"573","line":24,"column":6,"nodeType":"533","endLine":24,"endColumn":8,"suggestions":"574"},{"ruleId":"531","severity":1,"message":"575","line":46,"column":6,"nodeType":"533","endLine":46,"endColumn":8,"suggestions":"576"},"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","'navigate' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'FcGoogle' is defined but never used.","'toast' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'navigate' and 'signupData'. Either include them or remove the dependency array.","ArrayExpression",["577"],"'res' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getEnrolledCourses'. Either include it or remove the dependency array.",["578"],"'updateCompletedLectures' is defined but never used.","react/jsx-pascal-case","Imported JSX component Course_Card must be in PascalCase or SCREAMING_SNAKE_CASE","usePascalOrSnakeCase","'fetchCourseDetails' is defined but never used.","React Hook useEffect has missing dependencies: 'courseId', 'dispatch', and 'token'. Either include them or remove the dependency array.",["579"],["580"],"'React' is defined but never used.","'FreeMode' is defined but never used.","React Hook useEffect has missing dependencies: 'course.category', 'course.courseDescription', 'course.courseName', 'course.instructions', 'course.price', 'course.tag', 'course.thumbnail', 'course.whatYouWillLearn', 'editCourse', and 'setValue'. Either include them or remove the dependency array.",["581"],["582"],"React Hook useEffect has missing dependencies: 'course?.instructions', 'editCourse', 'name', and 'register'. Either include them or remove the dependency array. If 'register' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["583"],["584"],"React Hook useEffect has missing dependencies: 'name' and 'setValue'. Either include them or remove the dependency array. If 'setValue' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["585"],["586"],"React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["587"],["588"],"'setCourse' is defined but never used.","'setEditCourse' is defined but never used.","React Hook useEffect has missing dependencies: 'course?.tag', 'editCourse', 'name', and 'register'. Either include them or remove the dependency array. If 'register' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["589"],["590"],["591"],["592"],"'course' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'name'. Either include it or remove the dependency array.",["593"],["594"],["595"],["596"],"React Hook useEffect has missing dependencies: 'course?.status' and 'setValue'. Either include them or remove the dependency array.",["597"],"React Hook useEffect has missing dependencies: 'edit', 'modalData.description', 'modalData.title', 'modalData.videoUrl', 'setValue', and 'view'. Either include them or remove the dependency array.",["598"],{"desc":"599","fix":"600"},{"desc":"601","fix":"602"},{"desc":"603","fix":"604"},{"kind":"605","justification":"606"},{"desc":"607","fix":"608"},{"kind":"605","justification":"606"},{"desc":"609","fix":"610"},{"kind":"605","justification":"606"},{"desc":"611","fix":"612"},{"kind":"605","justification":"606"},{"desc":"613","fix":"614"},{"kind":"605","justification":"606"},{"desc":"615","fix":"616"},{"kind":"605","justification":"606"},{"desc":"617","fix":"618"},{"kind":"605","justification":"606"},{"desc":"619","fix":"620"},{"kind":"605","justification":"606"},{"desc":"621","fix":"622"},{"kind":"605","justification":"606"},{"desc":"623","fix":"624"},{"desc":"625","fix":"626"},"Update the dependencies array to be: [navigate, signupData]",{"range":"627","text":"628"},"Update the dependencies array to be: [getEnrolledCourses]",{"range":"629","text":"630"},"Update the dependencies array to be: [courseId, dispatch, token]",{"range":"631","text":"632"},"directive","","Update the dependencies array to be: [course.category, course.courseDescription, course.courseName, course.instructions, course.price, course.tag, course.thumbnail, course.whatYouWillLearn, editCourse, setValue]",{"range":"633","text":"634"},"Update the dependencies array to be: [course?.instructions, editCourse, name, register]",{"range":"635","text":"636"},"Update the dependencies array to be: [name, requirementsList, setValue]",{"range":"637","text":"638"},"Update the dependencies array to be: [token]",{"range":"639","text":"640"},"Update the dependencies array to be: [course?.tag, editCourse, name, register]",{"range":"641","text":"642"},"Update the dependencies array to be: [chips, name, setValue]",{"range":"643","text":"644"},"Update the dependencies array to be: [name, register]",{"range":"645","text":"646"},"Update the dependencies array to be: [name, selectedFile, setValue]",{"range":"647","text":"648"},"Update the dependencies array to be: [course?.status, setValue]",{"range":"649","text":"650"},"Update the dependencies array to be: [edit, modalData.description, modalData.title, modalData.videoUrl, setValue, view]",{"range":"651","text":"652"},[643,645],"[navigate, signupData]",[730,732],"[getEnrolledCourses]",[1015,1017],"[courseId, dispatch, token]",[2063,2065],"[course.category, course.courseDescription, course.courseName, course.instructions, course.price, course.tag, course.thumbnail, course.whatYouWillLearn, editCourse, setValue]",[626,628],"[course?.instructions, editCourse, name, register]",[753,771],"[name, requirementsList, setValue]",[799,801],"[token]",[829,831],"[course?.tag, editCourse, name, register]",[945,952],"[chips, name, setValue]",[1338,1348],"[name, register]",[1469,1493],"[name, selectedFile, setValue]",[923,925],"[course?.status, setValue]",[1254,1256],"[edit, modalData.description, modalData.title, modalData.videoUrl, setValue, view]"]